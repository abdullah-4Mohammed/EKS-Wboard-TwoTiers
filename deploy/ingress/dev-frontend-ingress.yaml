apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wbapp-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: wbapp.test.dv
    http:
      paths:
      - pathType: Prefix
        path: "/whiteboard"
        backend:
          service:
            name: backend-service
            port:
              number: 3001
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: frontend-service
            port:
              number: 5000


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-frontend
# spec:
#   rules:
#   - host: wbapp.test.dv
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: frontend-service
#             port: 
#               number: 5000
#   ingressClassName: nginx
  
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-frontend
#   namespace: default
#   labels:
#     name: ingress-frontend
#   annotations:
#     cert-manager.io/cluster-issuer: "letsencrypt-staging"  # Use letsencrypt for production
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - dv.a7-cloud.org # Subdomain
#     secretName: letsencry-stage-dv-a7-cloud-cert # Secret to store the generated certificate for subdomain
#   rules:
#   - host: dv.a7-cloud.org
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: frontend-service
#             port: 
#               number: 80

#inginx ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-frontend
# spec:
#   rules:
#   - host: wbapp.test.dv
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: frontend-service
#             port: 
#               number: 80
#   ingressClassName: nginx